// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dnsimple;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LetsEncryptCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final LetsEncryptCertificateArgs Empty = new LetsEncryptCertificateArgs();

    @Import(name="autoRenew", required=true)
    private Output<Boolean> autoRenew;

    public Output<Boolean> autoRenew() {
        return this.autoRenew;
    }

    /**
     * @deprecated
     * contact_id is deprecated and has no effect. The attribute will be removed in the next major version.
     * 
     */
    @Deprecated /* contact_id is deprecated and has no effect. The attribute will be removed in the next major version. */
    @Import(name="contactId")
    private @Nullable Output<Integer> contactId;

    /**
     * @deprecated
     * contact_id is deprecated and has no effect. The attribute will be removed in the next major version.
     * 
     */
    @Deprecated /* contact_id is deprecated and has no effect. The attribute will be removed in the next major version. */
    public Optional<Output<Integer>> contactId() {
        return Optional.ofNullable(this.contactId);
    }

    @Import(name="domainId")
    private @Nullable Output<String> domainId;

    public Optional<Output<String>> domainId() {
        return Optional.ofNullable(this.domainId);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private LetsEncryptCertificateArgs() {}

    private LetsEncryptCertificateArgs(LetsEncryptCertificateArgs $) {
        this.autoRenew = $.autoRenew;
        this.contactId = $.contactId;
        this.domainId = $.domainId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LetsEncryptCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LetsEncryptCertificateArgs $;

        public Builder() {
            $ = new LetsEncryptCertificateArgs();
        }

        public Builder(LetsEncryptCertificateArgs defaults) {
            $ = new LetsEncryptCertificateArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoRenew(Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * contact_id is deprecated and has no effect. The attribute will be removed in the next major version.
         * 
         */
        @Deprecated /* contact_id is deprecated and has no effect. The attribute will be removed in the next major version. */
        public Builder contactId(@Nullable Output<Integer> contactId) {
            $.contactId = contactId;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * contact_id is deprecated and has no effect. The attribute will be removed in the next major version.
         * 
         */
        @Deprecated /* contact_id is deprecated and has no effect. The attribute will be removed in the next major version. */
        public Builder contactId(Integer contactId) {
            return contactId(Output.of(contactId));
        }

        public Builder domainId(@Nullable Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public LetsEncryptCertificateArgs build() {
            $.autoRenew = Objects.requireNonNull($.autoRenew, "expected parameter 'autoRenew' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
